name: pa11y tests

on:
  pull_request:
    paths:
      - frontend/**
      - .github/workflows/ci-frontend-a11y.yml

jobs:
  build:
    name: Pa11y-ci tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    env:
      NODE_VERSION: 20
      LOCKFILE_PATH: ./frontend/package-lock.json
      PACKAGE_MANAGER: npm

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache-dependency-path: ${{ env.LOCKFILE_PATH }}
          cache: ${{ env.PACKAGE_MANAGER }}

      - name: Install dependencies
        run: npm ci

      - name: Create screenshots directory
        run: mkdir -p screenshots-output

      - name: Build project
        run: npm run build

      - name: Start server and log output
        run: npm run start &

      - name: Wait for frontend to be ready
        run: |
          # Ensure the server wait script is executable
          chmod +x ./bin/wait-for-frontend.sh
          ./bin/wait-for-frontend.sh

      - name: Run pa11y-ci
        id: run-pa11y
        run: |
          set -e # Ensure the script fails if any command fails
          npm run test:pa11y > pa11y-results.txt
          echo "pa11y-ci tests finished."

      - name: Parse and format Pa11y results
        id: parse-pa11y
        run: |
          # Extract and format the results
          grep -oP 'Errors in .+?:\n(?:\s+â€¢ .+?\n)+' pa11y-results.txt | sed 's/^/| /; s/$/ |/; 1i | URL | Errors |' > pa11y-report.md

      - name: Upload screenshots
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: screenshots
          path: ./frontend/screenshots-output

      - name: Post Pa11y results as a PR comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            ## Pa11y Accessibility Test Results
            $(cat pa11y-report.md)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
